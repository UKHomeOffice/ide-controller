(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(74)),i={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started",slug:"/getting-started"},s={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Folder Structure",source:"@site/docs/folder-structure.md",slug:"/getting-started",permalink:"/ide-controller/getting-started",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/folder-structure.md",version:"current",sidebar_label:"Getting Started",sidebar:"someSidebar",next:{title:"Build",permalink:"/ide-controller/"}},d=[{value:"Folder Structure",id:"folder-structure",children:[]}],c={rightToc:d};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"folder-structure"},"Folder Structure"),Object(a.b)("p",null,"After creation, your project should look like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"ide-controller\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .drone.yml\n\u251c\u2500\u2500 lerna.json\n\u2514\u2500\u2500 packages\n    \u251c\u2500\u2500 react\n    \u251c\u2500\u2500 electron\n    \u2514\u2500\u2500 docs\n    ...\n")),Object(a.b)("p",null,"Each package has it's own ",Object(a.b)("inlineCode",{parentName:"p"},"package.json"),", ",Object(a.b)("inlineCode",{parentName:"p"},"node_modules"),", ",Object(a.b)("inlineCode",{parentName:"p"},".eslintrc.js")," etc. These packages should be as independent as possible from the root\npackage. It is possible to use packages from the root but these should only be ",Object(a.b)("inlineCode",{parentName:"p"},"devdependencies"),"."),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/lerna/lerna"}),"Lerna")," is used to manage these packages. It's a tool that optimises the workflow around managing multi-package repositories with git and npm and is used by projects like Babel, React, Angular, Ember, Meteor, Jest."))}l.isMDXComponent=!0}}]);